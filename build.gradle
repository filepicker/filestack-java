buildscript {
    ext.kotlin_version = '1.9.20'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id 'com.github.kt3k.coveralls' version '2.12.2'
    id 'com.github.gmazzo.buildconfig' version '5.3.4'
    id 'maven-publish'
    /*TODO: Future Publish Approach Required plugins
    id 'java'
    id 'signing'
    id 'cl.franciscosolis.sonatype-central-upload' version '1.0.3'*/
}

apply plugin: 'checkstyle'
apply plugin: 'kotlin'
apply plugin: 'jacoco'
apply plugin: 'java-library'
apply plugin: 'com.github.gmazzo.buildconfig'
apply plugin: 'maven-publish'

group = 'com.filestack'
sourceCompatibility = 21
// Get version string from VERSION text file
version = file(new File('VERSION')).text.trim()

dependencies {
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.14'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'

    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:2.19.0'
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'com.squareup.okhttp3:mockwebserver:5.0.0-alpha.14'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'

}

// Add generated build-config directories to the main source set, so that the
// IDE doesn't complain when the app references BuildConfig classes
sourceSets {
    main {
        java {
            srcDir new File(buildDir, 'gen/buildconfig')
        }
    }
}

buildConfig {
    buildConfigField(String, 'VERSION', project.version)
    className("FilestackBuildConfig")
    packageName = project.group
}

javadoc {
    destinationDir new File("./docs")
    options.optionFiles(new File('./config/javadoc/javadoc.txt'))
}

repositories {
    mavenCentral()
}


// Create javadoc artifact jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

// Create source artifact jar
task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

// Put unit and integration test reports in separate directories
tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

// *************************************** Plugin Config ******************************************
//TODO: FS-11617: Final Maven Cental Publishing changes once account configured
//Current Approach: Publishing artefacto JCenter
/*bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser')
            : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey')
            : System.getenv('BINTRAY_API_KEY')
    publications = ['Maven']
    publish = true
    pkg {
        repo = 'maven'
        userOrg = 'filestack'
        name = 'filestack-java'
        desc = 'Official Java SDK for Filestack.'

        publicDownloadNumbers = true
        licenses = ['Apache-2.0']

        websiteUrl = 'https://filestack.com'
        vcsUrl = 'https://github.com/filestack/filestack-java.git'
        issueTrackerUrl = 'https://github.com/filestack/filestack-java/issues'

        githubRepo = 'filestack/filestack-java'
        githubReleaseNotesFile = 'CHANGELOG.md'

        version {
            name = project.version
            vcsTag = project.version
            released = new Date()
        }
    }
}*/

//TODO: Future Approach: Publishing artefacto Any new Repository
/*publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'com.filestack'
            artifactId = 'filestack-java'
            version = '0.9.0'
            from components.java

            pom {
                name = 'filestack-java'
                description = 'filestack-java'
                url = 'https://github.com/CelestialSystem/filestack-java'
                inceptionYear = '2022'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'SidramB'
                        name = 'SidramBS'
                        email = 'sidram.bs@celestialsys.com'
                    }
                }
                scm {
                    connection = 'scm:git:git:github.com/CelestialSystem/filestack-java.git'
                    developerConnection = 'scm:git:ssh://github.com/CelestialSystem/filestack-java.git'
                    url = 'https://github.com/CelestialSystem/filestack-java'
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = project.properties["username"]
                password = project.properties["password"]
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}*/

checkstyle {
    toolVersion = "10.12.4"
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "21"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

