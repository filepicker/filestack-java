buildscript {
    ext.kotlin_version = '1.9.20'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.gmazzo:gradle-buildconfig-plugin:3.0.3"
    }
}
plugins {
    id 'com.github.kt3k.coveralls' version '2.12.2'
    id 'com.github.gmazzo.buildconfig' version '3.0.3'
    id 'maven-publish'
    id 'java'
    id 'signing'
    id 'checkstyle'
}

apply plugin: 'checkstyle'
apply plugin: 'kotlin'
apply plugin: 'jacoco'
apply plugin: 'java-library'
apply plugin: 'com.github.gmazzo.buildconfig'
apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'signing'

group = 'com.filestack'
sourceCompatibility = 21
// Get version string from VERSION text file
version = file(new File('VERSION')).text.trim()

dependencies {
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.14'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'

    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:2.19.0'
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'com.squareup.okhttp3:mockwebserver:5.0.0-alpha.14'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'

}

// Add generated build-config directories to the main source set, so that the
// IDE doesn't complain when the app references BuildConfig classes
sourceSets {
    main {
        java {
            srcDir new File(buildDir, 'gen/buildconfig')
        }
    }
}

buildConfig {
    className = "FilestackBuildConfig"
    packageName = project.group
    buildConfigField 'String', 'VERSION', "\"${project.version}\""
}

// Added task to validate required Doc directory and files path
task validateDirAndFileForBuild {
    doLast {
        def dir = file("$projectDir/docs")
        if (!dir.exists()) {
            throw new GradleException("Required directory is missing: ${dir.absolutePath}")
        }
        def customFile = file("$projectDir/config/javadoc/javadoc.txt")
        if (!customFile.exists() || !customFile.isFile()) {
            throw new GradleException("Invalid file path: ${customFile.absolutePath}")
        }
    }
}
// Build fails, if required javadoc validation fails
build.dependsOn validateDirAndFileForBuild

javadoc {
    destinationDir new File(projectDir, '/docs')
    options.optionFiles(new File(projectDir, '/config/javadoc/javadoc.txt'))
}

repositories {
    mavenCentral()
}


// Create javadoc artifact jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

// Create source artifact jar
task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

// Put unit and integration test reports in separate directories
tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

// Updated latest version to be compatible with JDK21
checkstyle {
    toolVersion = "10.18.2"
}

// Due to induced vulnerabilities, added code to exclude unused "org.codehaus.plexus" package.
// Downloaded as Transitive(child) dependencies from Checkstyle plugin but not used in application.
configurations.all {
    exclude group: 'org.codehaus.plexus'
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "21"
    }
}

publishing {
    publications {
        filestackJava(MavenPublication) {
            groupId = 'com.filestack'
            artifactId = 'filestack-java'
            version = file(new File('VERSION')).text.trim()
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'filestack-java'
                description = 'filestack-java'
                url = 'https://github.com/filestack/filestack-java'
                inceptionYear = '2017'
                licenses {
                    license {
                        name = 'Apache-2.0'
                        url = 'https://opensource.org/license/apache-2-0'
                    }
                }
                developers {
                    developer {
                        id = 'filestack'
                        name = 'Filestack'
                        email = 'dev@filestack.com'
                    }
                }
                scm {
                    connection = 'scm:git:git:github.com/filestack/filestack-java.git'
                    developerConnection = 'scm:git:ssh://github.com/filestack/filestack-java.git'
                    url = 'https://github.com/filestack/filestack-java'
                }
            }
        }
    }
    repositories {
        maven {
            url = layout.projectDirectory.dir('releases')
        }
    }
}

//signing {
//    useGpgCmd()
//    sign publishing.publications.filestackJava
//}